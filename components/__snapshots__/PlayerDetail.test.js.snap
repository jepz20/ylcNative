// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PlayerDetail counter animation is not called if props value is the same 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PlayerDetail
    changePlayerName={[Function]}
    currentPoints={8000}
    id="1"
    name="Jose"
    results={
        Immutable.Map {
            1: Object {
                "winner": "1",
              },
        }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <View
          style={
                    Object {
                              "flexDirection": "row",
                              "height": 35,
                              "justifyContent": "space-around",
                              "marginTop": 10,
                            }
          }
>
          Array [
                    <Indicator
                      type="win"
          />,
                    <Indicator
                      type="neutral"
          />,
                    <Indicator
                      type="neutral"
          />,
                  ]
</View>,
        <PointsCounter
          value={8000}
/>,
        <View
          style={
                    Object {
                              "height": 40,
                              "justifyContent": "flex-end",
                              "marginBottom": 5,
                              "marginLeft": 5,
                            }
          }
>
          <TextInput
                    allowFontScaling={true}
                    onChangeText={[Function]}
                    style={
                              Object {
                                        "borderBottomWidth": 0,
                                        "color": "#fff",
                                        "fontSize": 17,
                                        "fontWeight": "bold",
                                      }
                    }
                    underlineColorAndroid="transparent"
                    value="Jose"
          />
</View>,
      ],
      "style": Object {
        "backgroundColor": "#006400",
        "borderColor": "#005a00",
        "borderWidth": 1,
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Indicator
              type="win"
/>,
            <Indicator
              type="neutral"
/>,
            <Indicator
              type="neutral"
/>,
          ],
          "style": Object {
            "flexDirection": "row",
            "height": 35,
            "justifyContent": "space-around",
            "marginTop": 10,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "1",
            "nodeType": "function",
            "props": Object {
              "type": "win",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "function",
            "props": Object {
              "type": "neutral",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "3",
            "nodeType": "function",
            "props": Object {
              "type": "neutral",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "value": 8000,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <TextInput
            allowFontScaling={true}
            onChangeText={[Function]}
            style={
                        Object {
                                    "borderBottomWidth": 0,
                                    "color": "#fff",
                                    "fontSize": 17,
                                    "fontWeight": "bold",
                                  }
            }
            underlineColorAndroid="transparent"
            value="Jose"
/>,
          "style": Object {
            "height": 40,
            "justifyContent": "flex-end",
            "marginBottom": 5,
            "marginLeft": 5,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "allowFontScaling": true,
            "onChangeText": [Function],
            "style": Object {
              "borderBottomWidth": 0,
              "color": "#fff",
              "fontSize": 17,
              "fontWeight": "bold",
            },
            "underlineColorAndroid": "transparent",
            "value": "Jose",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <View
            style={
                        Object {
                                    "flexDirection": "row",
                                    "height": 35,
                                    "justifyContent": "space-around",
                                    "marginTop": 10,
                                  }
            }
>
            Array [
                        <Indicator
                          type="win"
            />,
                        <Indicator
                          type="neutral"
            />,
                        <Indicator
                          type="neutral"
            />,
                      ]
</View>,
          <PointsCounter
            value={8000}
/>,
          <View
            style={
                        Object {
                                    "height": 40,
                                    "justifyContent": "flex-end",
                                    "marginBottom": 5,
                                    "marginLeft": 5,
                                  }
            }
>
            <TextInput
                        allowFontScaling={true}
                        onChangeText={[Function]}
                        style={
                                    Object {
                                                "borderBottomWidth": 0,
                                                "color": "#fff",
                                                "fontSize": 17,
                                                "fontWeight": "bold",
                                              }
                        }
                        underlineColorAndroid="transparent"
                        value="Jose"
            />
</View>,
        ],
        "style": Object {
          "backgroundColor": "#006400",
          "borderColor": "#005a00",
          "borderWidth": 1,
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Indicator
                type="win"
/>,
              <Indicator
                type="neutral"
/>,
              <Indicator
                type="neutral"
/>,
            ],
            "style": Object {
              "flexDirection": "row",
              "height": 35,
              "justifyContent": "space-around",
              "marginTop": 10,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "function",
              "props": Object {
                "type": "win",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "function",
              "props": Object {
                "type": "neutral",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": "3",
              "nodeType": "function",
              "props": Object {
                "type": "neutral",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "value": 8000,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <TextInput
              allowFontScaling={true}
              onChangeText={[Function]}
              style={
                            Object {
                                          "borderBottomWidth": 0,
                                          "color": "#fff",
                                          "fontSize": 17,
                                          "fontWeight": "bold",
                                        }
              }
              underlineColorAndroid="transparent"
              value="Jose"
/>,
            "style": Object {
              "height": 40,
              "justifyContent": "flex-end",
              "marginBottom": 5,
              "marginLeft": 5,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "allowFontScaling": true,
              "onChangeText": [Function],
              "style": Object {
                "borderBottomWidth": 0,
                "color": "#fff",
                "fontSize": 17,
                "fontWeight": "bold",
              },
              "underlineColorAndroid": "transparent",
              "value": "Jose",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`PlayerDetail renders with no props  1`] = `
<View
  style={
    Object {
      "backgroundColor": "#006400",
      "borderColor": "#005a00",
      "borderWidth": 1,
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "height": 35,
        "justifyContent": "space-around",
        "marginTop": 10,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 65,
            "fontWeight": "bold",
          },
          Object {
            "fontSize": 125,
          },
        ]
      }
    >
      
    </Text>
  </View>
  <View
    style={
      Object {
        "height": 40,
        "justifyContent": "flex-end",
        "marginBottom": 5,
        "marginLeft": 5,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      style={
        Object {
          "borderBottomWidth": 0,
          "color": "#fff",
          "fontSize": 17,
          "fontWeight": "bold",
        }
      }
      underlineColorAndroid="transparent"
      value={undefined}
    />
  </View>
</View>
`;

exports[`PlayerDetail renders with players detail and no results  1`] = `
<View
  style={
    Object {
      "backgroundColor": "#006400",
      "borderColor": "#005a00",
      "borderWidth": 1,
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "height": 35,
        "justifyContent": "space-around",
        "marginTop": 10,
      }
    }
  />
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 65,
            "fontWeight": "bold",
          },
          Object {
            "fontSize": 65,
          },
        ]
      }
    >
      8000
    </Text>
  </View>
  <View
    style={
      Object {
        "height": 40,
        "justifyContent": "flex-end",
        "marginBottom": 5,
        "marginLeft": 5,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      style={
        Object {
          "borderBottomWidth": 0,
          "color": "#fff",
          "fontSize": 17,
          "fontWeight": "bold",
        }
      }
      underlineColorAndroid="transparent"
      value="Jose"
    />
  </View>
</View>
`;

exports[`PlayerDetail renders with players detail results  1`] = `
<View
  style={
    Object {
      "backgroundColor": "#006400",
      "borderColor": "#005a00",
      "borderWidth": 1,
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "height": 35,
        "justifyContent": "space-around",
        "marginTop": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderColor": "#000",
            "borderRadius": 50,
            "borderWidth": 1,
            "elevation": 2,
            "height": 30,
            "width": 30,
          },
          Object {
            "backgroundColor": "green",
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#000",
            "borderRadius": 50,
            "borderWidth": 1,
            "elevation": 2,
            "height": 30,
            "width": 30,
          },
          Object {
            "backgroundColor": "red",
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#000",
            "borderRadius": 50,
            "borderWidth": 1,
            "elevation": 2,
            "height": 30,
            "width": 30,
          },
          Object {
            "backgroundColor": "yellow",
          },
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 65,
            "fontWeight": "bold",
          },
          Object {
            "fontSize": 65,
          },
        ]
      }
    >
      8000
    </Text>
  </View>
  <View
    style={
      Object {
        "height": 40,
        "justifyContent": "flex-end",
        "marginBottom": 5,
        "marginLeft": 5,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      style={
        Object {
          "borderBottomWidth": 0,
          "color": "#fff",
          "fontSize": 17,
          "fontWeight": "bold",
        }
      }
      underlineColorAndroid="transparent"
      value="Jose"
    />
  </View>
</View>
`;

exports[`PlayerDetail renders with players detail results when there is only one duel  1`] = `
<View
  style={
    Object {
      "backgroundColor": "#006400",
      "borderColor": "#005a00",
      "borderWidth": 1,
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "row",
        "height": 35,
        "justifyContent": "space-around",
        "marginTop": 10,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "borderColor": "#000",
            "borderRadius": 50,
            "borderWidth": 1,
            "elevation": 2,
            "height": 30,
            "width": 30,
          },
          Object {
            "backgroundColor": "green",
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#000",
            "borderRadius": 50,
            "borderWidth": 1,
            "elevation": 2,
            "height": 30,
            "width": 30,
          },
          Object {
            "backgroundColor": "grey",
          },
        ]
      }
    />
    <View
      style={
        Array [
          Object {
            "borderColor": "#000",
            "borderRadius": 50,
            "borderWidth": 1,
            "elevation": 2,
            "height": 30,
            "width": 30,
          },
          Object {
            "backgroundColor": "grey",
          },
        ]
      }
    />
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          Object {
            "color": "#fff",
            "fontSize": 65,
            "fontWeight": "bold",
          },
          Object {
            "fontSize": 65,
          },
        ]
      }
    >
      8000
    </Text>
  </View>
  <View
    style={
      Object {
        "height": 40,
        "justifyContent": "flex-end",
        "marginBottom": 5,
        "marginLeft": 5,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      onChangeText={[Function]}
      style={
        Object {
          "borderBottomWidth": 0,
          "color": "#fff",
          "fontSize": 17,
          "fontWeight": "bold",
        }
      }
      underlineColorAndroid="transparent"
      value="Jose"
    />
  </View>
</View>
`;
